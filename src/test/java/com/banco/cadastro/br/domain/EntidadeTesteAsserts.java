package com.banco.cadastro.br.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EntidadeTesteAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEntidadeTesteAllPropertiesEquals(EntidadeTeste expected, EntidadeTeste actual) {
        assertEntidadeTesteAutoGeneratedPropertiesEquals(expected, actual);
        assertEntidadeTesteAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEntidadeTesteAllUpdatablePropertiesEquals(EntidadeTeste expected, EntidadeTeste actual) {
        assertEntidadeTesteUpdatableFieldsEquals(expected, actual);
        assertEntidadeTesteUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEntidadeTesteAutoGeneratedPropertiesEquals(EntidadeTeste expected, EntidadeTeste actual) {
        assertThat(actual)
            .as("Verify EntidadeTeste auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()))
            .satisfies(a -> assertThat(a.getCreatedBy()).as("check createdBy").isEqualTo(expected.getCreatedBy()))
            .satisfies(a -> assertThat(a.getCreatedDate()).as("check createdDate").isEqualTo(expected.getCreatedDate()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEntidadeTesteUpdatableFieldsEquals(EntidadeTeste expected, EntidadeTeste actual) {
        assertThat(actual)
            .as("Verify EntidadeTeste relevant properties")
            .satisfies(a -> assertThat(a.getNome()).as("check nome").isEqualTo(expected.getNome()))
            .satisfies(a -> assertThat(a.getDtnascimento()).as("check dtnascimento").isEqualTo(expected.getDtnascimento()))
            .satisfies(a -> assertThat(a.getAtivooo()).as("check ativooo").isEqualTo(expected.getAtivooo()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEntidadeTesteUpdatableRelationshipsEquals(EntidadeTeste expected, EntidadeTeste actual) {
        // empty method
    }
}
